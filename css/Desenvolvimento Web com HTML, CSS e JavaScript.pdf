<!DOCTYPE html>
<!-- saved from url=(0099)https://www.caelum.com.br/apostila-html-css-javascript/mais-html-e-css/#exerccios-painis-flutuantes -->
<html lang="pt-BR" class="js svg ratio1x appcache offline-not-installed gr__caelum_com_br"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <link rel="next" href="https://www.caelum.com.br/apostila-html-css-javascript/css-avancado/index.html"><style></style> <link rel="prev" href="https://www.caelum.com.br/apostila-html-css-javascript/html-semantico-e-posicionamento-no-css/index.html">   <meta name="viewport" content="width=device-width,initial-scale=1"> <title>Mais HTML e CSS | Desenvolvimento Web com HTML, CSS e JavaScript</title> <script type="text/javascript" async="" src="https://ssl.google-analytics.com/ga.js"></script><script type="text/javascript" async="" defer="" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/goal.min.js.download"></script><script>"https:"!=location.protocol&&"www.caelum.com.br"==location.hostname&&(location.href="https:"+location.href.substring(location.protocol.length)),document.documentElement.className="js "+(document.createElementNS&&document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGRect?"svg ":"no-svg ")+"ratio"+(devicePixelRatio>1.3?"2x ":"1x ")</script> <meta property="og:title" content="Mais HTML e CSS | Desenvolvimento Web com HTML, CSS e JavaScript"> <meta property="og:image" content="https://www.caelum.com.br/apostila-html-css-javascript/share.png"> <meta property="og:site_name" content="Apostilas Caelum"> <meta property="fb:app_id" content="140078819399376"> <meta itemprop="name" content="Mais HTML e CSS | Desenvolvimento Web com HTML, CSS e JavaScript"> <meta itemprop="image" content="https://www.caelum.com.br/apostila-html-css-javascript/share.png"> <meta name="apple-mobile-web-app-capable" content="yes"> <meta name="apple-mobile-web-app-title" content="HTML, CSS, JS"> <link rel="apple-touch-icon" href="https://www.caelum.com.br/apostila-html-css-javascript/share.png"> <script>"standalone"in navigator&&navigator.standalone&&(document.documentElement.className+=" ios-webapp")</script> <meta property="fb:url" content="https://www.caelum.com.br/apostila-html-css-javascript/mais-html-e-css/"> <link rel="canonical" href="https://www.caelum.com.br/apostila-html-css-javascript/mais-html-e-css/"> <style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style></head> <body data-gr-c-s-loaded="true"><div id="MathJax_Message" style="display: none;"></div> <script async="" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/apostila-aberta.js.download"></script> <script src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/MathJax.js.download" id=""></script> <script async="" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/plugin.js.download"></script> <link rel="stylesheet" href="./Desenvolvimento Web com HTML, CSS e JavaScript_files/apostila-aberta.css"> <link rel="stylesheet" href="./Desenvolvimento Web com HTML, CSS e JavaScript_files/anuncio.css"> <div class="barra-topo" role="banner"> <div class="container barra-container"> <div class="sombra" style="top: 0px;"></div> <div> <a href="http://www.caelum.com.br/" class="logo"> <img src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/caelum-logo-cinza.svg" alt="Caelum" onerror="this.src=this.src.replace(&#39;.svg&#39;, &#39;.png&#39;); this.onerror=null"> </a> <a href="https://www.caelum.com.br/apostila-html-css-javascript/" class="book-title" title="Ir para Capa e Sumário da apostila">Apostila Desenvolvimento Web com HTML, CSS e JavaScript</a> <div class="menu-mais"> <a href="http://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.caelum.com.br%2Fapostila-html-css-javascript%2F" class="share" rel="nofollow" title="Compartilhar no Facebook"> <span aria-hidden="true" class="icone-facebook"></span> <span class="ir">Compartilhar apostila WD-43 no Facebook</span> </a> <div class="config"> <span aria-hidden="true" class="icone-list icone" title="Opções"></span> <span tabindex="0" class="ir">Opções</span> <div class="submenu"> <section class="submenu-sub"> <h3 class="submenu-divisor submenu-label">Navegação</h3> <ul> <li> <a href="https://www.caelum.com.br/apostila-html-css-javascript/index.html" title="Ir para Capa e Sumário da apostila" class="submenu-link"> <span aria-hidden="true" class="icone icone-house"></span> <span>Capa &amp; Sumário</span> </a> </li> <li> <form> <label for="chapter-nav-select" id="chapter-nav-label" class="submenu-label">Capítulos</label> <select class="chapter-nav" title="Navegue nos capítulos da apostila" id="chapter-nav-select" aria-labeledby="chapter-nav-label"> <option></option> <option value="../sobre-o-curso-o-complexo-mundo-do-front-end/index.html"> 1. Sobre o curso - o complexo mundo do front-end </option> <option value="../introducao-a-html-e-css/index.html"> 2. Introdução a HTML e CSS </option> <option value="../html-semantico-e-posicionamento-no-css/index.html"> 3. HTML semântico e posicionamento no CSS </option> <option value="../mais-html-e-css/index.html" selected="selected"> 4. Mais HTML e CSS </option> <option value="../css-avancado/index.html"> 5. CSS Avançado </option> <option value="../web-para-dispositivos-moveis/index.html"> 6. Web para dispositivos móveis </option> <option value="../introducao-a-php/index.html"> 7. Introdução a PHP </option> <option value="../progressive-enhancement-e-mobile-first/index.html"> 8. Progressive enhancement e mobile-first </option> <option value="../php-parametros-e-paginas-dinamicas/index.html"> 9. PHP: parâmetros e páginas dinâmicas </option> <option value="../bootstrap-e-formularios-html5/index.html"> 10. Bootstrap e formulários HTML5 </option> <option value="../javascript-e-interatividade-na-web/index.html"> 11. JavaScript e interatividade na Web </option> <option value="../jquery/index.html"> 12. jQuery </option> <option value="../integracoes-com-servicos-web/index.html"> 13. Integrações com serviços Web </option> <option value="../apendice-otimizacoes-de-front-end/index.html"> 14. Apêndice - Otimizações de front-end </option> <option value="../apendice-less/index.html"> 15. Apêndice - LESS </option> <option value="../apendice-php-banco-de-dados-e-sql/index.html"> 16. Apêndice - PHP: Banco de dados e SQL </option> <option value="../apendice-subindo-sua-aplicacao-no-cloud/index.html"> 17. Apêndice - Subindo sua aplicação no cloud </option> <option value="../apendice-mais-integracoes-com-servicos-web/index.html"> 18. Apêndice - Mais integrações com serviços Web </option> </select> </form> </li> <li> <form action="https://www.caelum.com.br/busca/" method="GET"> <input type="hidden" name="apostila" value="WD-43"> <label for="apostila-busca-input" id="apostila-busca-label" class="submenu-label">Busca</label> <input type="search" id="apostila-busca-input" aria-labeledby="apostila-busca-label" name="q"> <button title="Buscar" class="search-form-action"> <span aria-hidden="true" class="icone-search"></span> <span class="ir">Buscar</span> </button> </form> </li> </ul> </section> <section class="submenu-sub"> <h3 class="submenu-divisor submenu-label">Mais</h3> <ul> <li> <a href="https://www.caelum.com.br/curso-html-css-javascript" title="Desenvolvimento Web com HTML, CSS e JavaScript" class="submenu-link"> <span aria-hidden="true" class="icone icone-star"></span> <span>Curso Caelum dessa apostila</span> </a> </li> <li> <a href="http://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.caelum.com.br%2Fapostila-html-css-javascript%2F" rel="nofollow" class="submenu-link"> <span aria-hidden="true" class="icone icone-facebook"></span> <span>Compartilhar no Facebook</span> </a> </li> <li> <a href="http://www.caelum.com.br/apostilas/#download" title="Baixe em PDF, epub e mobi" class="submenu-link"> <span aria-hidden="true" class="icone icone-install"></span> <span>Download da apostila</span> </a> </li> <li> <a href="http://www.caelum.com.br/apostilas/" title="Apostilas abertas da Caelum" class="submenu-link"> <span aria-hidden="true" class="icone icone-plus"></span> <span>Outras apostilas abertas</span> </a> </li> </ul> </section> </div> </div> </div> </div> </div> </div> <ol itemscope="" itemtype="http://schema.org/BreadcrumbList" class="container breadcrumb"> <li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem" class="breadcrumb-item"> <a itemscope="" itemtype="http://schema.org/Thing" itemprop="item" href="https://www.caelum.com.br/curso-html-css-javascript"> <span itemprop="name">Curso Desenvolvimento Web com HTML, CSS e JavaScript</span> </a> <meta itemprop="position" content="1"> </li> › <li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem" class="breadcrumb-item"> <a itemscope="" itemtype="http://schema.org/Thing" itemprop="item" href="https://www.caelum.com.br/apostila-html-css-javascript/"> <span itemprop="name">Apostila</span> </a> <meta itemprop="position" content="2"> </li> › <li itemprop="itemListElement" itemscope="" class="breadcrumb-item" itemtype="http://schema.org/ListItem"> <a itemscope="" itemtype="http://schema.org/Thing" itemprop="item" href="https://www.caelum.com.br/apostila-html-css-javascript/mais-html-e-css/"> <span itemprop="name">Capítulo 4 - Mais HTML e CSS</span> </a> <meta itemprop="position" content="3"> </li> </ol> <div class="tubaina container" role="main"> <div class="chapterHeader">Capítulo 4</div><h1 class="book-chapter">Mais HTML e CSS</h1> <p><em>"O medo é o pai da moralidade" -- Friedrich Wilhelm Nietzsche</em></p> <h2 id="analisando-o-miolo-da-pgina">4.1 Analisando o miolo da página</h2> <p>Elaboramos o cabeçalho, mas ainda resta a área central e o rodapé. Focaremos agora nessa área central.</p> <p>A área central possui duas áreas distintas: o bloco principal inicial, com o menu de navegação e o banner de destaque, e o bloco com os painéis com destaques de produtos.</p> <p>Na área de navegação, teremos um formulário de busca, permitindo que o usuário busque por produtos.</p> <div class="anuncio"> <a href="https://www.casadocodigo.com.br/" title="Editora Casa do Código"> <h4>Editora Casa do Código com livros de uma forma diferente</h4> <img class="icone" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/casa-do-codigo_2x.png" style="width:93.5px;height:120px" width="93.50" height="120.00" aria-hidden="true"> <p>Editoras tradicionais pouco ligam para ebooks e novas tecnologias. Não dominam tecnicamente o assunto para revisar os livros a fundo. Não têm anos de experiência em didáticas com cursos.<br>Conheça a <strong>Casa do Código</strong>, uma editora diferente, com curadoria da <strong>Caelum</strong> e obsessão por livros de qualidade a preços justos.</p> <p><span class="action">Casa do Código, ebook com preço de ebook.</span></p> </a> </div> <h2 id="formulrios">4.2 Formulários</h2> <p>Em HTML, temos um elemento <code>&lt;form&gt;</code> criado para capturar os dados do usuário e submetê-lo a algum serviço da Internet.</p> <p>Os dados são passados para o <code>&lt;form&gt;</code> por meio da tag <code>&lt;input&gt;</code>, que pode uma ter dupla finalidade: receber os dados digitados ou submeter o formulário.</p> <p>É por meio da propriedade <code>type</code> que definimos essa finalidade. Em nosso caso, utilizaremos o tipo <code>search</code> para capturar os dados digitados e o tipo <code>image</code> para submeter o formulário. Existe também o tipo <code>submit</code>, que possui a mesma finalidade do <code>image</code>, mas é renderizado como um botão.</p> <pre><code class="lang-html"><span class="hljs-tag">&lt;<span class="hljs-title">form</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"search"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"image"</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"img/busca.png"</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"lupa"</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">form</span>&gt;</span>
</code></pre> <h2 id="posicionamento-com-float-e-clear">4.3 Posicionamento com float e clear</h2> <p>Em nosso layout, precisamos colocar o menu abaixo da busca e alinhado à esquerda com a imagem principal ao lado de ambos. Como conseguir este resultado? Uma solução seria utilizar <code>position</code> no menu, mas é algo que quebraria facilmente nosso layout caso a busca aumentasse de tamanho.</p> <p>Em um dos nossos primeiros exercícios com a página <code>sobre.html</code>, colocamos a imagem da família Pelho à direita com a propriedade <code>float</code>, fazendo com que o elemento parágrafo a contornasse. Vamos tentar aplicar <code>float</code> à busca e ao menu para que ambos fiquem à esquerda, fazendo com que a imagem central os contorne:</p> <pre><code class="lang-css"><span class="hljs-class">.busca</span>,
<span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">float</span>:<span class="hljs-value"> left</span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p></p><div class="figure"><img src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/problema-float.png" alt="" style="max-width:800px"></div> <p>O resultado não foi o esperado. Para resolvermos este problema, precisaremos recorrer à propriedade <strong>clear</strong>.</p> <h3 id="a-propriedade-clear">A propriedade clear</h3> <p>Existe uma propriedade que determina qual vai ser o comportamento de outros elementos que vêm ao redor daquele que a recebe e estão flutuando, e essa propriedade é a <code>clear</code>. A propriedade <code>clear</code> quer dizer "limpe o fluxo do documento ao meu lado" e pode receber os valores <code>left</code>, <code>right</code> ou <code>both</code>.</p> <p>O valor <code>left</code> impede que elementos flutuantes fiquem à esquerda do elemento que recebe essa propriedade, o valor <code>right</code> impede que elementos flutuem à direita desse, e o valor <code>both</code> impede que elementos flutuem em ambos os lados do elemento. É importante sabermos que a propriedade <code>clear</code> de um elemento só interfere no layout da página caso outros elementos à sua volta estiverem flutuando.</p> <p>Ao aplicarmos <code>clear:left</code> em nosso menu, ele não ficará ao lado da nossa busca com propriedade <code>float</code> e será renderizado na linha seguinte:</p> <pre><code class="lang-css"><span class="hljs-class">.busca</span>,
<span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">float</span>:<span class="hljs-value"> left</span></span>;
<span class="hljs-rule">}</span></span>

<span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">clear</span>:<span class="hljs-value"> left</span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p></p><div class="figure"><img src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/float-clear.png" alt="" style="max-width:770px"></div> <h2 id="decorao-de-texto-com-css">4.4 Decoração de texto com CSS</h2> <p>O CSS permite ainda transformações e decorações de texto.</p> <h3 id="transformao-de-texto">Transformação de texto</h3> <p>A propriedade <code>text-transform</code> permite realizar transformações em textos e seus possíveis valores são:</p> <ul> <li><strong>uppercase</strong> - Todas as letras em maiúsculo;</li> <li><strong>lowercase</strong> - Todas as letras em minúsculo;</li> <li><strong>capitalize</strong> - Só as primeiras letras das palavras em maiúsculo.</li> </ul> <p>Se quisermos colocar o texto em caixa alta:</p> <pre><code class="lang-css"><span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">text-transform</span>:<span class="hljs-value"> uppercase</span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <h3 id="decorao-de-texto">Decoração de texto</h3> <p>Existe uma série de decorações que o navegador adiciona aos textos, dependendo das tags que utilizamos. A decoração mais comum é o sublinhado nos textos de links (tags <code>&lt;a&gt;</code> com valor para o atributo "href"). Existem outros tipos de decoração, como por exemplo, o texto contido na tag <code>&lt;del&gt;</code> (que serve para indicar um texto que foi removido de uma determinada versão do documento) é exibido com uma linha bem no meio do texto.</p> <p>É muito comum que em alguns casos seja desejável ocultar a linha inferior nos links, embora seja recomendado que links dentro de textos sejam decorados para destacarem-se do restante, facilitando a usabilidade e navegabilidade. No caso dos menus, onde temos uma área específica e isolada, normalmente estilizada e decorada o suficiente, normalmente podemos ocultar esse sublinhado, como no exemplo:</p> <pre><code class="lang-css"><span class="hljs-class">.item-menu</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">text-decoration</span>:<span class="hljs-value"> none</span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>Além do <code>none</code> (nenhuma decoração) ainda poderíamos ter configurado <code>underline</code> (com uma linha embaixo, o padrão dos links), <code>overline</code> (com uma linha em cima do texto), <code>line-through</code> (uma linha no meio do texto) e <code>blink</code> (o texto fica piscando na tela, o que não é muito recomendado).</p> <div class="anuncio"> <a href="https://www.alura.com.br/promocao/aluno-caelum" title="Cursos Online Alura"> <h4>Já conhece os cursos online Alura?</h4> <img class="icone" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/alura_2x.png" style="width:120px;height:54px" width="120.00" height="54.00" aria-hidden="true"> <p>A <strong>Alura</strong> oferece centenas de <strong>cursos online</strong> em sua plataforma exclusiva de ensino que favorece o aprendizado com a <strong>qualidade</strong> reconhecida da Caelum. Você pode escolher um curso nas áreas de Programação, Front-end, Mobile, Design &amp; UX, Infra e Business, com um plano que dá acesso a todos os cursos. Ex aluno da Caelum tem 15% de desconto neste link!</p> <p><span class="action">Conheça os cursos online Alura.</span></p> </a> </div> <h2 id="cascata-e-herana-no-css">4.5 Cascata e herança no CSS</h2> <p>Algumas propriedades de elementos pais, quando alteradas, são aplicadas automaticamente para seus elementos filhos em cascata. Por exemplo:</p> <pre><code class="lang-html"><span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">id</span>=<span class="hljs-value">"pai"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">h1</span>&gt;</span>Sou um título<span class="hljs-tag">&lt;/<span class="hljs-title">h1</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>Sou um subtítulo<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>
</code></pre> <pre><code class="lang-css"><span class="hljs-id">#pai</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> blue</span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>No exemplo acima, todos os elementos filhos <strong>herdaram</strong> o valor da propriedade <code>color</code> do elemento pai a qual eles pertencem.</p> <p>As propriedades que <strong>não</strong> são aplicadas em cascata em elementos filhos geralmente são aquelas que afetam diretamente a caixa (box) do elemento, como <code>width</code>, <code>height</code>, <code>margin</code> e <code>padding</code>.</p> <pre><code class="lang-css"><span class="hljs-tag">h1</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">padding-left</span>:<span class="hljs-value"> <span class="hljs-number">40px</span></span></span>;
<span class="hljs-rule">}</span></span>
<span class="hljs-id">#pai</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> blue</span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">padding-left</span>:<span class="hljs-value"> <span class="hljs-number">0</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>Perceba que o <code>padding</code> do elemento <code>&lt;h1&gt;</code> não foi sobrescrito pelo valor do elemento pai <code>&lt;div&gt;</code>, ou seja, o valor <code>40px</code> foi mantido.</p> <h2 id="para-saber-mais-o-valor-inherit">4.6 Para saber mais: o valor inherit</h2> <p>Imagine que temos a seguinte divisão com uma imagem:</p> <pre><code class="lang-html"><span class="hljs-tag">&lt;<span class="hljs-title">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-title">img</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"box-model.png"</span> <span class="hljs-attribute">alt</span>=<span class="hljs-value">"box model"</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>
</code></pre> <pre><code class="lang-css"><span class="hljs-tag">div</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">border</span>:<span class="hljs-value"> <span class="hljs-number">2px</span> solid</span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">border-color</span>:<span class="hljs-value"> red</span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">30px</span></span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">height</span>:<span class="hljs-value"> <span class="hljs-number">30px</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>Queremos que a imagem preencha todo o espaço da <code>&lt;div&gt;</code>, mas as propriedades <code>width</code> e <code>height</code> não são aplicadas em cascata, sendo assim, somos obrigados a definir o tamanho da imagem manualmente:</p> <pre><code class="lang-css"><span class="hljs-tag">img</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">30px</span></span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">height</span>:<span class="hljs-value"> <span class="hljs-number">30px</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>Esta não é uma solução elegante, porque, se alterarmos o tamanho da <code>&lt;div&gt;</code>, teremos que lembrar de alterar também o tamanho da imagem. Uma forma de resolver este problema é utilizado o valor <strong>inherit</strong> para as propriedades <code>width</code> e <code>height</code> da imagem:</p> <pre><code class="lang-css"><span class="hljs-tag">img</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> inherit</span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">height</span>:<span class="hljs-value"> inherit</span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>O valor <code>inherit</code> indica para o elemento filho que ele deve utilizar o mesmo valor presente no elemento pai, sendo assim, toda vez que o tamanho do elemento pai for alterado, automaticamente o elemento filho herdará o novo valor, facilitando assim, a manutenção do código.</p> <p>Lembre-se de que o <code>inherit</code> também afeta propriedades que não são aplicadas em cascata.</p> <h2 id="exerccios-menu-e-destaque">4.7 Exercícios: menu e destaque</h2> <ol> <li><p>Vamos criar um elemento destaque e, dentro dele, uma <code>section</code> para busca e outra para o menu:</p> <pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"container destaque"</span>&gt;</span>

   <span class="hljs-tag">&lt;<span class="hljs-title">section</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"busca"</span>&gt;</span>
     <span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>Busca<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>

     <span class="hljs-tag">&lt;<span class="hljs-title">form</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"search"</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">input</span> <span class="hljs-attribute">type</span>=<span class="hljs-value">"image"</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"img/busca.png"</span>&gt;</span>
     <span class="hljs-tag">&lt;/<span class="hljs-title">form</span>&gt;</span>
   <span class="hljs-tag">&lt;/<span class="hljs-title">section</span>&gt;</span><span class="hljs-comment">&lt;!-- fim .busca --&gt;</span>

   <span class="hljs-tag">&lt;<span class="hljs-title">section</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"menu-departamentos"</span>&gt;</span>
     <span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>Departamentos<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>

     <span class="hljs-tag">&lt;<span class="hljs-title">nav</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">ul</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"#"</span>&gt;</span>Blusas e Camisas<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"#"</span>&gt;</span>Calças<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"#"</span>&gt;</span>Saias<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"#"</span>&gt;</span>Vestidos<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"#"</span>&gt;</span>Sapatos<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"#"</span>&gt;</span>Bolsas e Carteiras<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"#"</span>&gt;</span>Acessórios<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
       <span class="hljs-tag">&lt;/<span class="hljs-title">ul</span>&gt;</span>
     <span class="hljs-tag">&lt;/<span class="hljs-title">nav</span>&gt;</span>
   <span class="hljs-tag">&lt;/<span class="hljs-title">section</span>&gt;</span><span class="hljs-comment">&lt;!-- fim .menu-departamentos --&gt;</span>

   <span class="hljs-tag">&lt;<span class="hljs-title">img</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"img/destaque-home.png"</span> <span class="hljs-attribute">alt</span>=<span class="hljs-value">"Promoção: Big City Night"</span>&gt;</span>
 <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span><span class="hljs-comment">&lt;!-- fim .container .destaque --&gt;</span>
</code></pre> <p> Repare como já usamos diversas classes no HTML para depois selecionarmos os elementos via CSS.</p> </li> <li><p>Aplique o estilo visual do design com CSS. Queremos um fundo cinza nas caixas de busca e no menu de departamentos. Além disso, o texto deve estar em negrito e apresentado em maiúsculas. Aplicaremos também algumas regras de tamanhos e margens.</p> <pre><code class="lang-css"> <span class="hljs-class">.busca</span>, 
 <span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#dcdcdc</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">font-weight</span>:<span class="hljs-value"> bold</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">text-transform</span>:<span class="hljs-value"> uppercase</span></span>;

   <span class="hljs-rule"><span class="hljs-attribute">margin-right</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">230px</span></span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.busca</span> <span class="hljs-tag">h2</span>,
 <span class="hljs-class">.busca</span> <span class="hljs-tag">form</span>,
 <span class="hljs-class">.menu-departamentos</span> <span class="hljs-tag">h2</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.menu-departamentos</span> <span class="hljs-tag">li</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> white</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">margin-bottom</span>:<span class="hljs-value"> <span class="hljs-number">1px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">5px</span> <span class="hljs-number">10px</span></span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.menu-departamentos</span> <span class="hljs-tag">a</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#333333</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">text-decoration</span>:<span class="hljs-value"> none</span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> </li> <li><p>Na busca, use a propriedade <code>vertical-align</code> para alinhar o campo de texto à imagem da lupa pelo centro. Aproveite e coloque o tamanho do campo de texto para melhor encaixar no design e use seletores de atributo do CSS para isso (veremos mais desses seletores depois no curso).</p> <pre><code class="lang-css"> <span class="hljs-class">.busca</span> <span class="hljs-tag">input</span> <span class="hljs-rules">{
     <span class="hljs-rule"><span class="hljs-attribute">vertical-align</span>:<span class="hljs-value"> middle</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.busca</span> <span class="hljs-tag">input</span><span class="hljs-attr_selector">[type=search]</span> <span class="hljs-rules">{
     <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">170px</span></span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Teste a página no navegador e veja como o design está quase pronto, apenas o posicionamento dos elementos precisa ser acertado.</p> <p> </p><div class="figure"><img src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/ex41A.png" alt="" style="max-width:500px"></div> </li> <li><p>Para que o menu de departamentos e a busca estejam à esquerda na página, vamos <strong>flutuar</strong> esses elementos com <code>float:left</code>.</p> <p> Mas só isso fará com que o menu fique a direita da busca (faça o teste). Precisamos indicar ao <code>menu-departamentos</code> que ele deve flutuar à esquerda mas não ao lado de outro elemento. Conseguimos isso com a propriedade <code>clear</code>.</p> <pre><code class="lang-css"> <span class="hljs-class">.busca</span>, 
 <span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
     <span class="hljs-rule"><span class="hljs-attribute">float</span>:<span class="hljs-value"> left</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
     <span class="hljs-rule"><span class="hljs-attribute">clear</span>:<span class="hljs-value"> left</span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Observe novamente a página no navegador e veja como o posicionamento está correto.</p> <p> </p><div class="figure"><img src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/ex41B.png" alt="" style="max-width:500px"></div> <p> Repare que o CSS usado foi bastante curto e simples. Mas o conceito do <code>float</code> e do <code>clear</code> é difícil e complexo. Esteja certo de ter compreendido o porquê do uso dessas propriedades no exercício, antes de prosseguir o curso!</p> </li> <li><p>Mais acertos de design. Acerte as margens e posicionamentos no menu lateral e no topo:</p> <pre><code class="lang-css"> <span class="hljs-class">.destaque</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">margin-top</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
 <span class="hljs-rule">}</span></span>
 <span class="hljs-class">.menu-departamentos</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">margin-top</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">padding-bottom</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Teste o resultado.</p> </li> </ol> <div class="anuncio"> <a href="https://www.aluralingua.com.br/?utm_source=alumni&amp;utm_medium=apostila&amp;utm_campaign=aluno-caelum" title="Pratique seu inglês na Alura Língua" rel="nofollow"> <h4>Saber inglês é muito importante em TI</h4> <img class="icone" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/alura-lingua_2x.png" style="width:300px;height:81px" width="300.00" height="81.00" aria-hidden="true"> <p>Na <strong>Alura Língua</strong> você reforça e aprimora seu inglês! Usando a técnica <i>Spaced Repetitions</i> o aprendizado naturalmente <strong>se adapta ao seu conhecimento</strong>. Exercícios e vídeos interativos fazem com que você pratique em situações cotidianas. Além disso, todas as aulas possuem explicações gramaticais, para você entender completamente o que está aprendendo. Aprender inglês é fundamental para o profissional de tecnologia de sucesso!</p> <p><span class="action">Pratique seu inglês na Alura Língua.</span></p> </a> </div> <h2 id="display-inline-block">4.8 Display inline-block</h2> <p>Precisamos criar um painel com uma lista de novidades, onde cada produto será representado por uma <code>&lt;li&gt;</code>. Já sabemos que por padrão uma <code>&lt;li&gt;</code> possui a propriedade <code>display:block</code>, mas queremos os produtos lado a lado. Podemos trocar este comportamento mudando a propriedade <code>display</code> dos elementos para <code>inline</code>.</p> <p>Também será necessário alterar as propriedades <code>width</code>, <code>margin</code> e <code>padding</code> das <code>&lt;li&gt;</code>, mas agora os elementos <code>&lt;li&gt;</code> são <code>inline</code> e este modo de exibição ignora alterações que afetam as propriedades da <em>box</em>. Como resolver este problema?</p> <p>Os navegadores mais modernos introduzem um modelo de exibição que é a mistura dos dois, o <code>inline-block</code>. Os elementos que recebem o valor <code>inline-block</code> para a propriedade <code>display</code> obedecem às especificações de dimensão das propriedades <code>height</code> (altura) e <code>width</code> (largura) e ainda permitem que outros elementos sejam exibidos ao seu lado como elementos <code>inline</code>.</p> <pre><code class="lang-css"><span class="hljs-class">.painel</span> <span class="hljs-tag">li</span> <span class="hljs-rules">{
    <span class="hljs-rule"><span class="hljs-attribute">display</span>:<span class="hljs-value"> inline-block</span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">vertical-align</span>:<span class="hljs-value"> top</span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">140px</span></span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">2px</span></span></span>;
    <span class="hljs-rule"><span class="hljs-attribute">padding-bottom</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>Como o inline-block faz os elementos se alinharem como numa linha de texto, podemos controlar o alinhamento vertical dessa linha da mesma forma que fizemos antes com linhas de texto e imagens simples. Isto é, usando a propriedade <code>vertical-align</code> que, nesse caso, recebeu valor <code>top</code>.</p> <p>Isso indica que, se tivermos vários produtos de tamanhos diferentes, eles vão se alinhar pelo topo.</p> <h2 id="exerccios-painis-flutuantes">4.9 Exercícios: painéis flutuantes</h2> <ol> <li><p>Vamos criar agora nosso painel de novidades. Crie um elemento <code>&lt;div&gt;</code> para conter os <strong>dois painéis de produtos</strong>. Ele deve receber a classe <strong>container</strong>, para se alinhar ao meio da tela, e a classe <strong>paineis</strong> que usaremos depois no CSS.</p> <pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"container paineis"</span>&gt;</span>
     <span class="hljs-comment">&lt;!-- os paineis de novidades e mais vendidos entrarão aqui dentro --&gt;</span>
 <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>
</code></pre> </li> <li><p><strong>Dentro da div criada acima</strong>, criaremos uma nova <code>&lt;section&gt;</code> para cada painel. A primeira, receberá as classes <strong>painel</strong> e <strong>novidades</strong>. Ela conterá o título em um <code>&lt;h2&gt;</code> e uma lista ordenada (<code>&lt;ol&gt;</code>) de produtos.</p> <p> Cada produto deve ser representado como um item na lista (<code>&lt;li&gt;</code>) com um link para o produto e sua imagem (representado por <code>figure</code>, <code>figcaption</code> e <code>img</code>).</p> <p> Veja o exemplo com um produto. <strong>Ele deve ser incluído dentro da section que você acabou de criar</strong>:</p> <pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-title">section</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"painel novidades"</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>Novidades<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-title">ol</span>&gt;</span>

     <span class="hljs-comment">&lt;!-- primeiro produto --&gt;</span>
     <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"produto.html"</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-title">figure</span>&gt;</span>
           <span class="hljs-tag">&lt;<span class="hljs-title">img</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"img/produtos/miniatura1.png"</span>&gt;</span>
           <span class="hljs-tag">&lt;<span class="hljs-title">figcaption</span>&gt;</span>Fuzz Cardigan por R$ 129,90<span class="hljs-tag">&lt;/<span class="hljs-title">figcaption</span>&gt;</span>
         <span class="hljs-tag">&lt;/<span class="hljs-title">figure</span>&gt;</span>
       <span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span>
     <span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>

     <span class="hljs-comment">&lt;!-- coloque mais produtos aqui! --&gt;</span>
   <span class="hljs-tag">&lt;/<span class="hljs-title">ol</span>&gt;</span>
 <span class="hljs-tag">&lt;/<span class="hljs-title">section</span>&gt;</span>
</code></pre> <p> Crie o HTML desse painel e o preencha com vários produtos (6 é um bom número). Lembre-se de que cada produto está na sua própria <code>li</code> com link e imagem próprios. Na pasta <strong>img/produtos</strong> do seu projeto, você encontra várias imagens <strong>miniaturaX.png</strong> que podem ser usadas para criar produtos diferentes.</p> </li> <li><p>Crie um segundo painel, para representar os produtos mais vendidos. Esse painel deve ficar <strong>após</strong> o fechamento do painel anterior, mas ainda <strong>dentro</strong> da div <code>paineis</code>.</p> <p> O novo painel deve receber as classes <strong>painel</strong> e <strong>mais-vendidos</strong>. Sua estrutura é idêntica ao do exercício anterior (dica: copie o código para evitar refazer tudo de novo).</p> <pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-title">section</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"painel mais-vendidos"</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-title">h2</span>&gt;</span>Mais Vendidos<span class="hljs-tag">&lt;/<span class="hljs-title">h2</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-title">ol</span>&gt;</span>

     <span class="hljs-comment">&lt;!-- coloque vários produtos aqui --&gt;</span>

   <span class="hljs-tag">&lt;/<span class="hljs-title">ol</span>&gt;</span>
 <span class="hljs-tag">&lt;/<span class="hljs-title">section</span>&gt;</span>
</code></pre> <p> <em>Nosso HTML já está ficando grande e complexo, como é uma página real cheia de conteúdo. Cuidado para não se confundir na posição das tags. Recapitulando essa parte dos painéis, a estrutura deve estar assim</em>:</p> <ul> <li><p><strong>div</strong>: container paineis</p> </li> <li><p><strong>section</strong>: painel novidades</p> </li> <li><p><strong>h2</strong>: título Novidades</p> </li> <li><p><strong>ol</strong>: lista de produtos</p> </li> <li><p>vários <code>li</code>s com produtos (e links e imagens dentro de cada um)</p> </li> <li><p><strong>section</strong>: painel mais-vendidos</p> </li> <li><p><strong>h2</strong>: título Mais Vendidos</p> </li> <li><p><strong>ol</strong>: lista de produtos</p> </li> <li><p>vários <code>li</code>s com produtos (e links e imagens dentro de cada um)</p> </li> </ul> </li> <li><p>Vamos posicionar nossos painéis para ficarem de acordo com o design.</p> <p> O painel de <code>novidades</code> deve flutuar à esquerda e o <code>mais-vendidos</code>, à direita. Cada um deve ocupar <code>445px</code> (pouco menos da metade dos 940px), assim um ficará ao lado do outro:</p> <pre><code class="lang-css"> <span class="hljs-class">.painel</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">10px</span> <span class="hljs-number">0</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">445px</span></span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.novidades</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">float</span>:<span class="hljs-value"> left</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.mais-vendidos</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">float</span>:<span class="hljs-value"> right</span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Próximo passo: os itens dos produtos dentro da lista de cada painel. Queremos que sejam dispostos lado a lado mas com certo tamanho e espaçamento para alinhamento. Conseguimos isso colocando <code>display:inline-block</code> nos elementos da lista e, para alinhar os produtos pelo topo, com <code>vertical-align:top</code>.</p> <pre><code class="lang-css"> <span class="hljs-class">.painel</span> <span class="hljs-tag">li</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">display</span>:<span class="hljs-value"> inline-block</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">vertical-align</span>:<span class="hljs-value"> top</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">140px</span></span></span>;

   <span class="hljs-rule"><span class="hljs-attribute">margin</span>:<span class="hljs-value"> <span class="hljs-number">2px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">padding-bottom</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> O posicionamento em si deve estar certo. Mas falta umas regras para estilo, como tamanho dos títulos e cores de texto e fundo.</p> <pre><code class="lang-css"> <span class="hljs-class">.painel</span> <span class="hljs-tag">h2</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">font-size</span>:<span class="hljs-value"> <span class="hljs-number">24px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">font-weight</span>:<span class="hljs-value"> bold</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">text-transform</span>:<span class="hljs-value"> uppercase</span></span>;

   <span class="hljs-rule"><span class="hljs-attribute">margin-bottom</span>:<span class="hljs-value"> <span class="hljs-number">10px</span></span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.painel</span> <span class="hljs-tag">a</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#333</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">font-size</span>:<span class="hljs-value"> <span class="hljs-number">14px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">text-align</span>:<span class="hljs-value"> center</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">text-decoration</span>:<span class="hljs-value"> none</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.novidades</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#f5dcdc</span></span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.mais-vendidos</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#dcdcf5</span></span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Teste a página no navegador e veja o resultado final!</p> <p> </p><div class="figure"><img src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/ex42.png" alt="" style="max-width:750px"></div> </li> </ol> <h2 id="seletores-de-atributo-do-css3">4.10 Seletores de atributo do CSS3</h2> <p>Além dos seletores de tag, classe e id que observamos anteriormente, existe mais uma série de seletores avançados do CSS.</p> <p>Um dos seletores CSS mais versáteis é o seletor de atributo, com ele podemos verificar a presença ou valor de um atributo para selecioná-lo. Por exemplo:</p> <pre><code class="lang-css"><span class="hljs-tag">input</span><span class="hljs-attr_selector">[value]</span> <span class="hljs-rules">{
  <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#cc0000</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>O seletor acima age em todos os elementos da tag <code>&lt;input&gt;</code> que têm o atributo "value". Também é possível verificar se o atributo tem um valor específico:</p> <pre><code class="lang-css"><span class="hljs-tag">input</span><span class="hljs-attr_selector">[type="text"]</span> <span class="hljs-rules">{
  <span class="hljs-rule"><span class="hljs-attribute">border-radius</span>:<span class="hljs-value"> <span class="hljs-number">4px</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>Além de verificar um valor integralmente, é possível utilizar alguns operadores para selecionar valores em determinadas condições, como por exemplo o seletor de atributo com prefixo:</p> <pre><code class="lang-css"><span class="hljs-tag">div</span><span class="hljs-attr_selector">[class|="menu"]</span> <span class="hljs-rules">{
  <span class="hljs-rule"><span class="hljs-attribute">border-radius</span>:<span class="hljs-value"> <span class="hljs-number">4px</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>O seletor acima vai agir em todas as tags <code>&lt;div&gt;</code> cujo atributo "class" comece com a palavra <strong>menu</strong> seguida de um hífen e qualquer outro valor na sequência, como por exemplo <strong>menu-principal</strong>, <strong>menu-departamentos</strong> e <strong>menu-teste</strong>.</p> <p>Também é possível buscar por uma palavra específica no valor, não importando o valor completo do atributo. Por exemplo:</p> <pre><code class="lang-css"><span class="hljs-tag">input</span><span class="hljs-attr_selector">[value~="problema"]</span> <span class="hljs-rules">{
  <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#cc0000</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>O seletor acima agirá sobre todos os elementos da tag <code>&lt;input&gt;</code> que contiverem a palavra "problema" em seu conteúdo.</p> <p>Com o CSS3 é possível utilizar novos operadores com sinais que se assemelham aos das expressões regulares:</p> <pre><code class="lang-css"><span class="hljs-comment">/* busca por inputs com valor de "name" iniciando em "usuario" */</span>
<span class="hljs-tag">input</span><span class="hljs-attr_selector">[name^="usuario"]</span> <span class="hljs-rules">{
  <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> <span class="hljs-number">99</span>ffcc</span></span>;
<span class="hljs-rule">}</span></span>

<span class="hljs-comment">/* busca por inputs com valor de "name" terminando em "teste" */</span>
<span class="hljs-tag">input</span><span class="hljs-attr_selector">[name$="teste"]</span> <span class="hljs-rules">{
  <span class="hljs-rule"><span class="hljs-attribute">background-color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#ccff00</span></span></span>;
<span class="hljs-rule">}</span></span>

<span class="hljs-comment">/* busca por inputs com valor do atributo "name" 
   contendo "tela" em qualquer posição */</span>
<span class="hljs-tag">input</span><span class="hljs-attr_selector">[name*="tela"]</span> <span class="hljs-rules">{
  <span class="hljs-rule"><span class="hljs-attribute">color</span>:<span class="hljs-value"> <span class="hljs-hexcolor">#666666</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <p>Os seletores de atributo têm o mesmo valor de especificidade dos seletores de classe.</p> <div class="anuncio"> <a href="https://www.alurastart.com.br/?utm_source=alumni&amp;utm_medium=apostila&amp;utm_campaign=aluno-caelum" title="Crie animações, games e programas! Na Alura Start você aprende se divertindo!" rel="nofollow"> <h4>Aprenda se divertindo na Alura Start!</h4> <img class="icone" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/alura-start_2x.png" style="width:300px;height:69px" width="300.00" height="69.00" aria-hidden="true"> <p>Você conhece alguém que tem potencial para tecnologia e programação, mas que nunca escreveu uma linha de código? Pode ser um filho, sobrinho, amigo ou parente distante. Na <strong>Alura Start</strong> ela vai poder criar games, apps, sites e muito mais! <strong>É o começo da jornada com programação e a porta de entrada para uma possível carreira de sucesso</strong>. Ela vai estudar em seu próprio ritmo e com a melhor didática. A qualidade da conceituada Alura, agora para Starters.</p> <p><span class="action">Conheça os cursos online da Alura Start!</span></p> </a> </div> <h2 id="rodap">4.11 Rodapé</h2> <p>Para finalizarmos a página, precisamos desenvolver o rodapé. Visualmente, ele é bastante simples. Mas há algumas questões importantes a serem salientadas.</p> <h3 id="semntica">Semântica</h3> <p>No HTML5, a tag apropriada para rodapés é a <code>&lt;footer&gt;</code>, que vamos usar no exercício. Além disso, nosso rodapé ainda tem mais 2 conteúdos: o logo em negativo do lado esquerdo e ícones de acesso a redes sociais do lado direito. Que elementos usar?</p> <p>O logo no lado esquerdo é uma simples imagem:</p> <pre><code class="lang-html"><span class="hljs-tag">&lt;<span class="hljs-title">img</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"img/logo-rodape.png"</span> <span class="hljs-attribute">alt</span>=<span class="hljs-value">"Logo Mirror Fashion"</span>&gt;</span>
</code></pre> <p>Já a lista de ícones das redes sociais, na verdade, é uma lista de links. Os ícones são meramente ilustrativos. Em um leitor de tela, vamos querer que um link seja lido para o usuário, independentemente do seu ícone gráfico.</p> <p>Podemos usar então uma simples lista com <code>&lt;a&gt;</code>:</p> <pre><code class="lang-html"><span class="hljs-tag">&lt;<span class="hljs-title">ul</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"social"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"http://facebook.com/mirrorfashion"</span>&gt;</span>Facebook<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"http://twitter.com/mirrorfashion"</span>&gt;</span>Twitter<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"http://plus.google.com/mirrorfashion"</span>&gt;</span>Google+<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-title">ul</span>&gt;</span>
</code></pre> <p>Esse é um ponto importante para entendermos a diferença entre marcação semântica e apresentação visual. Repare que criamos uma estrutura no HTML com conteúdo completamente diferente do resultado final visual. Vamos cuidar do visual depois no CSS.</p> <h2 id="substituio-por-imagem">4.12 Substituição por Imagem</h2> <p>Um truque muito usado em CSS é o chamado <strong>Image Replacement</strong> -- ou <em>substituição por imagem</em>. Serve para, usando técnicas de CSS, exibir uma imagem em algum elemento que originalmente foi feito com texto. Perfeito para nosso caso dos ícones das redes sociais.</p> <p>A ideia básica é:</p> <ul> <li>Acertar o tamanho do elemento para ficar igual ao da imagem;</li> <li>Colocar a imagem como <code>background</code> do elemento;</li> <li>Esconder o texto.</li> </ul> <p>Para esconder o texto, é comum usar a tática de colocar um <code>text-indent</code> negativo bastante alto. Isso, na prática, faz o texto ser renderizado "fora da tela".</p> <pre><code class="lang-css"><span class="hljs-class">.facebook</span> <span class="hljs-rules">{
  <span class="hljs-comment">/* tamanho do elemento = imagem */</span>
  <span class="hljs-rule"><span class="hljs-attribute">height</span>:<span class="hljs-value"> <span class="hljs-number">55px</span></span></span>;
  <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">85px</span></span></span>;

  <span class="hljs-comment">/* imagem como fundo */</span>
  <span class="hljs-rule"><span class="hljs-attribute">background-image</span>:<span class="hljs-value"> <span class="hljs-function">url</span>(../img/facebook.png)</span></span>;

  <span class="hljs-comment">/* retirando o texto da frente */</span>
  <span class="hljs-rule"><span class="hljs-attribute">text-indent</span>:<span class="hljs-value"> -<span class="hljs-number">9999px</span></span></span>;
<span class="hljs-rule">}</span></span>
</code></pre> <h2 id="estilizao-e-posicionamento-do-rodap">4.13 Estilização e posicionamento do rodapé</h2> <h3 id="container-interno">Container interno</h3> <p>Repare que o rodapé, diferentemente de todos os elementos do layout, ocupa 100% da largura da página. Ele não é restrito ao tamanho de 940px do miolo do nosso site. Isso porque o rodapé tem um <code>background</code> que se repete até os cantos.</p> <p>Mas repare que o conteúdo dele é limitado aos 940px e centralizado junto com o resto da página -- onde estávamos usando a <code>class container</code>.</p> <p>O que precisamos fazer então é ter o <code>&lt;footer&gt;</code> com 100% além de uma tag interna pra o conteúdo do rodapé em si, e essa tag será o <code>container</code>:</p> <pre><code class="lang-html">    <span class="hljs-tag">&lt;<span class="hljs-title">footer</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"container"</span>&gt;</span>
            ....
        <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-title">footer</span>&gt;</span>
</code></pre> <h3 id="posicionamento">Posicionamento</h3> <p>Ao colocar o rodapé, você perceberá que ele subirá na página ao invés de ficar em baixo. Isso porque os elementos anteriores a ele, os painéis de destaque, estão flutuando na página e, portanto, saíram do fluxo de renderização. Para corrigir isso, basta usar a propriedade <code>clear: both</code> no <code>footer</code>.</p> <p>Dentro do rodapé em si, queremos que a lista de ícones seja colocada à direita. Podemos acertar isso com <strong>posicionamento absoluto</strong>, desde que o container do rodapé esteja <em>posicionado</em> (basta dar um <code>position:relative</code> a ele).</p> <p>Já os itens dentro da lista (os 3 links), devem ser flutuados lado a lado (e não um em cima do outro). É fácil fazer com <code>float:left</code> no <code>li</code>.</p> <h3 id="estilizao">Estilização</h3> <p>O rodapé em si terá um <code>background-image</code> com o fundo preto estampado repetido infinitamente.</p> <p>Os elementos internos são todos ícones a serem substituídos por imagens via CSS com <em>image replacement</em>.</p> <p>E, para saber qual ícone atribuir a qual link da lista de mídias sociais, podemos usar seletores de atributo do CSS3:</p> <pre><code class="lang-css">    <span class="hljs-class">.social</span> <span class="hljs-tag">a</span><span class="hljs-attr_selector">[href*="facebook.com"]</span> <span class="hljs-rules">{
      <span class="hljs-rule"><span class="hljs-attribute">background-image</span>:<span class="hljs-value"> <span class="hljs-function">url</span>(../img/facebook.png)</span></span>;
    <span class="hljs-rule">}</span></span>
</code></pre> <div class="anuncio"> <a href="https://www.casadocodigo.com.br/" title="Editora Casa do Código"> <h4>Seus livros de tecnologia parecem do século passado?</h4> <img class="icone" src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/casa-do-codigo_2x.png" style="width:93.5px;height:120px" width="93.50" height="120.00" aria-hidden="true"> <p>Conheça a <strong>Casa do Código</strong>, uma <strong>nova</strong> editora, com autores de destaque no mercado, foco em <strong>ebooks</strong> (PDF, epub, mobi), preços <strong>imbatíveis</strong> e assuntos <strong>atuais</strong>.<br>Com a curadoria da <strong>Caelum</strong> e excelentes autores, é uma abordagem <strong>diferente</strong> para livros de tecnologia no Brasil.</p> <p><span class="action">Casa do Código, Livros de Tecnologia.</span></p> </a> </div> <h2 id="exerccios-rodap">4.14 Exercícios: rodapé</h2> <ol> <li><p>Vamos finalizar nossa página com o rodapé do layout. Crie uma estrutura semântica no HTML usando a tag <code>&lt;footer&gt;</code> e tags <code>&lt;img&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;li&gt;</code> e <code>&lt;a&gt;</code> para o conteúdo.</p> <p> Atenção especial para a necessidade de um elemento <code>container</code> <strong>dentro</strong> do rodapé, para alinhar seu conteúdo com o restante da página.</p> <pre><code class="lang-html"> <span class="hljs-tag">&lt;<span class="hljs-title">footer</span>&gt;</span>
   <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"container"</span>&gt;</span>
     <span class="hljs-tag">&lt;<span class="hljs-title">img</span> <span class="hljs-attribute">src</span>=<span class="hljs-value">"img/logo-rodape.png"</span> <span class="hljs-attribute">alt</span>=<span class="hljs-value">"Logo Mirror Fashion"</span>&gt;</span>

     <span class="hljs-tag">&lt;<span class="hljs-title">ul</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"social"</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"http://facebook.com/mirrorfashion"</span>&gt;</span>Facebook<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"http://twitter.com/mirrorfashion"</span>&gt;</span>Twitter<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
       <span class="hljs-tag">&lt;<span class="hljs-title">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">a</span> <span class="hljs-attribute">href</span>=<span class="hljs-value">"http://plus.google.com/mirrorfashion"</span>&gt;</span>Google+<span class="hljs-tag">&lt;/<span class="hljs-title">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">li</span>&gt;</span>
     <span class="hljs-tag">&lt;/<span class="hljs-title">ul</span>&gt;</span>

   <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>
 <span class="hljs-tag">&lt;/<span class="hljs-title">footer</span>&gt;</span>
</code></pre> <p> Teste no seu navegador e veja o resultado sem estilo, mas utilizável.</p> </li> <li><p>Vamos estilizar o conteúdo visual. Coloque o <code>background</code> preto no rodapé e faça as substituições de imagens. Use <em>seletores de atributo</em> do CSS3 para identificar os ícones de cada rede social.</p> <pre><code class="lang-css"> <span class="hljs-tag">footer</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-image</span>:<span class="hljs-value"> <span class="hljs-function">url</span>(../img/fundo-rodape.png)</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.social</span> <span class="hljs-tag">a</span> <span class="hljs-rules">{
   <span class="hljs-comment">/* tamanho da imagem */</span>
   <span class="hljs-rule"><span class="hljs-attribute">height</span>:<span class="hljs-value"> <span class="hljs-number">32px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">width</span>:<span class="hljs-value"> <span class="hljs-number">32px</span></span></span>;

   <span class="hljs-comment">/* image replacement */</span>
   <span class="hljs-rule"><span class="hljs-attribute">display</span>:<span class="hljs-value"> block</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">text-indent</span>:<span class="hljs-value"> -<span class="hljs-number">9999px</span></span></span>;  
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.social</span> <span class="hljs-tag">a</span><span class="hljs-attr_selector">[href*="facebook.com"]</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-image</span>:<span class="hljs-value"> <span class="hljs-function">url</span>(../img/facebook.png)</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.social</span> <span class="hljs-tag">a</span><span class="hljs-attr_selector">[href*="twitter.com"]</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-image</span>:<span class="hljs-value"> <span class="hljs-function">url</span>(../img/twitter.png)</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.social</span> <span class="hljs-tag">a</span><span class="hljs-attr_selector">[href*="plus.google.com"]</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">background-image</span>:<span class="hljs-value"> <span class="hljs-function">url</span>(../img/googleplus.png)</span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Teste no navegador. O que aconteceu?</p> <p> O rodapé subiu na página porque os elementos anteriores (os painéis de destaque) estão flutuando. É fácil arrumar, basta adicionar a regra de <code>clear</code> no <code>footer</code>:</p> <pre><code class="lang-css"> <span class="hljs-tag">footer</span> <span class="hljs-rules">{
     <span class="hljs-rule"><span class="hljs-attribute">clear</span>:<span class="hljs-value"> both</span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Teste novamente. O rodapé voltou para o lugar certo?</p> </li> <li><p>Último passo: posicionar os elementos internos do rodapé apropriadamente.</p> <p> Vamos posicionar os ícones sociais absolutamente à direita com <code>position:absolute</code>. Para isso, o container do nosso rodapé precisa estar posicionado. Aproveite também e coloque um espaçamento interno:</p> <pre><code class="lang-css"> <span class="hljs-tag">footer</span> <span class="hljs-rules">{
     <span class="hljs-rule"><span class="hljs-attribute">padding</span>:<span class="hljs-value"> <span class="hljs-number">20px</span> <span class="hljs-number">0</span></span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-tag">footer</span> <span class="hljs-class">.container</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">position</span>:<span class="hljs-value"> relative</span></span>;
 <span class="hljs-rule">}</span></span>

 <span class="hljs-class">.social</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">position</span>:<span class="hljs-value"> absolute</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">top</span>:<span class="hljs-value"> <span class="hljs-number">12px</span></span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">right</span>:<span class="hljs-value"> <span class="hljs-number">0</span></span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Por fim, precisamos fazer os ícones das redes sociais fluturarem lado a lado horizontalmente:</p> <pre><code class="lang-css"> <span class="hljs-class">.social</span> <span class="hljs-tag">li</span> <span class="hljs-rules">{
   <span class="hljs-rule"><span class="hljs-attribute">float</span>:<span class="hljs-value"> left</span></span>;
   <span class="hljs-rule"><span class="hljs-attribute">margin-left</span>:<span class="hljs-value"> <span class="hljs-number">25px</span></span></span>;
 <span class="hljs-rule">}</span></span>
</code></pre> <p> Teste no navegador. Como está o resultado final? De acordo com o que o designer queria?</p> <p> </p><div class="figure"><img src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/ex43B.png" alt="" style="max-width:850px"></div> </li> </ol> <h2 id="exerccios-opcionais">4.15 Exercícios opcionais</h2> <ol> <li>Porte nosso rodapé para a página "Sobre" do capítulo anterior.</li> <li><p>Nossa página "Sobre" foi construída sem muita preocupação semântica. No HTML5, há novas tags com objetivo específico de lidar com conteúdos textuais divididos em partes, com subtítulos etc.</p> <p> Podem ser artigos de um jornal, um livro online ou mesmo um texto descrevendo nossa empresa - como nossa página Sobre faz.</p> <p> Podemos representar o texto todo com <code>&lt;article&gt;</code> e suas seções com <code>&lt;section&gt;</code>. Use essas novas tags na <strong>sobre.html</strong> para termos uma marcação mais semântica.</p> </li> <li><p>(desafio) O posicionamento dos elementos no rodapé possui um deselegante <code>top:12px</code>. Um número mágico arbitrário para centralizar verticalmente os ícones sociais e o logotipo. Repense o posicionamento para chegar em um código mais elegante, que evite o uso de <em>magic numbers</em>.</p> </li> </ol> </div> <nav class="nav-simple container" role="navigation"> <div class="nav-simple-item"> <p class="nav-simple-type">Capítulo anterior:</p> <a href="https://www.caelum.com.br/apostila-html-css-javascript/html-semantico-e-posicionamento-no-css/" class="nav-simple-chapter"> <span>HTML semântico e posicionamento no CSS</span> </a> </div> <div class="nav-simple-item"> <p class="nav-simple-type">Próximo capítulo:</p> <a href="https://www.caelum.com.br/apostila-html-css-javascript/css-avancado/" class="nav-simple-chapter"> <span>CSS Avançado</span> </a> </div> </nav> <div class="container comunidade"> <h2 class="comunidade-chamada">Você encontra a Caelum também em:</h2> <ul class="comunidade-itens"> <li class="comunidade-item comunidade-blog"> <a href="http://blog.caelum.com.br/"> <span class="sp-comunidade sp-comunidade-blog"></span> <h3>Blog Caelum</h3> </a> </li> <li class="comunidade-item comunidade-online"> <a href="http://www.alura.com.br/" rel="nofollow"> <span class="sp-comunidade sp-comunidade-online"></span> <h3>Cursos Online</h3> </a> </li> <li class="comunidade-item comunidade-facebook"> <a href="http://facebook.com/caelumbr" rel="nofollow"> <span class="sp-comunidade sp-comunidade-facebook"></span> <h3>Facebook</h3> </a> </li> <li class="comunidade-item comunidade-newsletter"> <a href="http://www.caelum.com.br/newsletter/"> <span class="sp-comunidade sp-comunidade-newsletter"></span> <h3>Newsletter</h3> </a> </li> <li class="comunidade-item comunidade-editora"> <a href="http://www.casadocodigo.com.br/"> <span class="sp-comunidade sp-comunidade-editora"></span> <h3>Casa do Código</h3> </a> </li> <li class="comunidade-item comunidade-twitter"> <a href="http://twitter.com/caelum" rel="nofollow"> <span class="sp-comunidade sp-comunidade-twitter"></span> <h3>Twitter</h3> </a> </li> </ul> </div> <script>var google_conversion_id=995678627,google_conversion_label="DYcgCO3T_gMQo7Pj2gM",google_custom_params=window.google_tag_params,google_remarketing_only=!0</script> <script src="https://www.googleadservices.com/pagead/conversion.js"></script> <noscript> &lt;div style="display:inline"&gt; &lt;img height="1"width="1"style="border-style:none"alt=""src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/995678627/?value=0&amp;amp;label=DYcgCO3T_gMQo7Pj2gM&amp;amp;guid=ON&amp;amp;script=0"&gt; &lt;/div&gt; </noscript> <script>var $mcGoal={settings:{uuid:"422bed2b74623ede65048a641",dc:"us1"}};!function(){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.defer=!0,t.src=("https:"==document.location.protocol?"https://s3.amazonaws.com/downloads.mailchimp.com":"http://downloads.mailchimp.com")+"/js/goal.min.js";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(t,e)}()</script> <script src="./Desenvolvimento Web com HTML, CSS e JavaScript_files/lead-tracking.min.js.download"></script> <script>LeadTracking.init({token:"4b7bbfbbbe5c7e29f1c12ecb3b59096b"})</script>  </body></html>